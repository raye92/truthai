import React from 'react';

interface IconProps {
  width?: number;
  height?: number;
  fill?: string;
  className?: string;
}

export const Logo: React.FC<IconProps> = ({
  width = 80,
  height = 80,
  fill = '#e2e8f0',
  className = '',
}) => {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg" 
      viewBox="0 0 1024 1024" 
      width={width} 
      height={height} 
      preserveAspectRatio="xMidYMid meet"
      className={className}
    >
      <path 
        d="M451 163.1c-28.4 3.6-59.1 16-82.2 33.1-45.2 33.5-69.4 90.3-64.8 152.5 2.3 32.7 7.6 48.1 28.4 82.7C351 462.4 355 472 355 486c0 18.2-9.6 36.2-22.8 42.7-5 2.4-6.9 2.8-14.8 2.8-8.4 0-9.6-.3-16-3.5-13.6-7-16-14.4-17.4-52.5-.9-24.4-2.2-30.9-8.4-43.3-12.4-24.5-32.4-36.7-57.6-34.9-12.5.9-24.7 6.5-34.8 16.1-7.3 6.9-8.9 12-5.5 17.7 2.4 4 7.8 5.7 20.8 6.3 6.1.3 12.7 1.1 14.8 1.7 5 1.4 11 6.9 13.8 12.5 1.9 4.1 2.1 5.7 1.6 14.2-.3 5.4-1.2 12.2-2.1 15.2-7.6 26.1-8.1 29-8 43 0 11.7.4 14.5 2.6 21.2 6.2 18.5 17.3 31.9 35.9 42.8 13.9 8.3 27.6 12 47.8 12.9l14.5.6-7.6 9c-4.2 4.9-12.2 13.5-18 19.1-11.4 11.1-14.3 12.6-30.8 16.6-7 1.6-10.7 1.9-20.5 1.5-6.6-.3-13.7-1-15.9-1.7-2.2-.7-6.5-3.6-10.1-7-5.1-4.7-7.1-6-10.8-6.5-6.6-1-8-.4-10.4 4.5-3 5.7-2.9 11.9.1 19.3 6.5 15.7 26.2 36.3 40.9 42.6 16.6 7.1 40.6 6.6 65.7-1.5 22.8-7.3 35.9-16.2 56.9-38.4 8-8.5 16.2-17.2 18.2-19.2 3.6-3.8 7.9-5.1 7.9-2.4 0 .7-2 6-4.5 11.7-10.5 24-15.2 44.9-14.2 63.9 2.2 42.1 25.8 71.5 67.2 83.5 7 2 10.9 2.5 19.9 2.5 17.2 0 23.2-2.6 24.2-10.5.8-5.8-2.1-9.5-15.1-19.2-13.2-9.8-18.5-15.4-22.5-23.7-8-16.9-8.3-37-.9-58.7 6.4-18.7 21-39.9 30.5-44.4 5.3-2.5 12.6-2.2 17.8.9 10.9 6.4 16.4 17.3 20.1 40.1 4.9 30.1 12.9 47.3 30.4 65.9 12.9 13.7 25.4 21.6 43.1 27.5 16 5.3 25.7 6.6 38 5.3 23.4-2.6 32.3-6.7 36.4-16.6 4.3-10.4.9-13.9-17.3-17.6-14.2-2.9-20.1-5.3-29.1-12.1-18.9-14.3-25.8-27.7-31-61.1-7.2-46-7-43.4-3.9-44.3 1.2-.4 2.4-.3 2.8.2.5.4 5.7 7.3 11.7 15.3 15.4 20.4 21.4 27.5 30.7 35.8 26.9 24 61.9 38.2 94.1 38.2 19 0 36.5-3.8 50.1-10.8 10.7-5.6 31.7-27.7 38-40 2.2-4.5 3.1-20.1 1.3-22.2-4.7-5.7-10.4-6.4-14.5-2-2.5 2.7-8.3 6.3-25.8 16.1-22.7 12.7-58.7 4.7-83.4-18.6-10.7-10.1-30.7-38.4-29.9-42.4.2-.9 3.7-2.3 9.7-3.8 28-7 46.9-26.9 52.7-55.7 3.8-18.6 17.8-34.4 32.4-36.3 2.7-.4 6.6.3 12.5 2.1 4.8 1.5 10 2.6 11.7 2.4 3.7-.4 6.6-3.9 7.5-9.1 1.3-8.3-10-23.9-23.3-31.9-10.4-6.3-15.8-8-27.6-8.6-12.9-.6-20.2 1.3-35 9-13.5 7.1-19.2 12.5-28 26.6-4 6.4-9.5 14-12.3 16.7-12.1 12.2-27.2 13.8-34.2 3.6-5.3-7.7-6.8-28.1-3.3-42.9 1.1-4.5 4.6-15.3 7.9-24 16.1-42.9 20.6-65.9 20.6-103.7-.1-47.4-9.3-78.9-32.8-112-10.2-14.5-28.9-34.1-39.7-41.7-20.2-14.2-44.5-23.6-70-27.3-11.3-1.6-36.2-1.8-47-.4zm1.8 232.5c4.5.9 11.1 7 13.8 12.8 4.4 9.5 2.2 21.9-5.2 28.8-8.6 8-21.8 6-28.7-4.5-4.1-6.3-5.7-10.7-5.7-16 0-8 6.9-17.4 15.1-20.3 4-1.5 6.5-1.6 10.7-.8zm134 4.5c6.4 3.1 9.6 8.5 10 16.9.5 8.3-1 13.1-5.5 18.1-3.9 4.3-8.2 5.9-15.7 5.9-7.9 0-13-3-16.2-9.7-6.3-12.7-3.1-26.8 7-31.4 5.7-2.6 14.7-2.5 20.4.2z" 
        fill={fill}
      />
    </svg>
  );
};

export const GeminiIcon: React.FC<IconProps> = ({
  width = 24,
  height = 24,
  fill = 'currentColor',
  className = '',
}) => {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg" 
      viewBox="200 200 600 600" 
      width={width} 
      height={height} 
      style={{ minWidth: width, minHeight: height }}
      className={className}
    >
      <path 
        fill={fill}
        d=" M580.064575,434.946655 C598.362610,453.503235 620.882202,463.829834 644.874084,471.658234 C672.882324,480.797180 701.680054,486.812012 730.273193,493.647736 C731.400085,493.917114 732.530212,494.212311 733.612610,494.618744 C735.340942,495.267761 737.114685,495.947113 737.213562,498.234894 C737.326904,500.855804 735.334900,501.710693 733.421936,502.179840 C724.712158,504.315918 715.941223,506.202209 707.229919,508.332428 C680.111023,514.963928 652.851624,521.129211 626.763306,531.349182 C611.481812,537.335693 596.982239,544.847168 584.624084,555.765747 C573.630188,565.479004 565.866028,577.740417 559.214783,590.715027 C544.571167,619.280457 536.941956,650.114624 530.461365,681.239014 C526.233948,701.542725 523.046387,722.061951 519.284851,742.464722 C518.740662,745.416260 518.935852,749.774048 514.869385,749.862915 C510.523438,749.957825 510.427979,745.353882 509.842194,742.350586 C505.968445,722.490906 502.675140,702.514282 498.583130,682.701660 C492.832825,654.859985 486.125214,627.313354 474.795013,601.009094 C459.438568,565.357605 433.547913,541.851990 396.947876,529.219238 C367.505463,519.056946 337.411865,511.478180 307.171722,504.310089 C303.457520,503.429657 299.796967,502.320038 296.119385,501.288757 C294.107361,500.724548 292.186829,499.862244 292.235962,497.404694 C292.285858,494.909149 294.358398,494.151642 296.330383,493.727142 C307.522339,491.317780 318.782257,489.206055 329.926910,486.599030 C355.333893,480.655731 380.630859,474.451508 405.026428,464.820190 C437.814514,451.875549 460.563293,429.122131 474.794739,397.169098 C485.141846,373.937378 491.607666,349.573944 496.591980,324.782074 C501.201813,301.852814 505.290405,278.818756 509.628571,255.834625 C509.843567,254.695648 510.284637,253.601227 510.560059,252.471329 C511.014709,250.606201 512.120117,249.620804 514.086365,249.606369 C516.131775,249.591354 516.979248,250.852356 517.551636,252.576767 C519.549011,258.594299 520.213074,264.880951 521.344360,271.072510 C527.459351,304.540253 532.760559,338.189331 544.255920,370.423065 C552.594116,393.803986 563.104675,415.955017 580.064575,434.946655 z"
      />
    </svg>
  );
};

export const GoogleIcon: React.FC<IconProps> = ({
  width = 24,
  height = 24,
  fill = 'currentColor',
  className = '',
}) => {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg" 
      viewBox="0 0 52 52" 
      width={width} 
      height={height} 
      style={{ minWidth: width, minHeight: height }}
      className={className}
      fill={fill}
    >
      <path d="M37.62,9.38L34.7,12.3c-1.47,1.47-3.7,1.75-5.58,0.85C27.57,12.41,25.84,12,24,12c-3.96,0-7.47,1.91-9.65,4.87l-6.44-4.73 C11.53,7.2,17.39,4,24,4C29.27,4,34.05,6.05,37.62,9.38z" />
      <path d="M35,40.7c-3.16,2.09-6.93,3.3-11,3.3c-6.7,0-12.62-3.29-16.23-8.34l6.33-4.88C16.26,33.93,19.88,36,24,36 c1.57,0,3.06-0.3,4.43-0.86L35,40.7z" />
      <path d="M12,24c0,1.43,0.25,2.79,0.71,4.06L6.2,33.08v0.03C4.79,30.38,4,27.28,4,24c0-3.36,0.83-6.53,2.31-9.31l6.56,4.81 C12.31,20.89,12,22.41,12,24z" />
      <path d="M44,24c0,5.88-2.55,11.18-6.59,14.83c0-0.01,0-0.01,0-0.02l-6.19-5.24c1.86-1.4,3.29-3.33,4.08-5.57H28 c-2.209,0-4-1.791-4-4v-4h19.61C43.86,21.27,44,22.66,44,24z" />
    </svg>
  );
};

export const ChatIcon: React.FC<IconProps> = ({
  width = 24,
  height = 24,
  fill = 'currentColor',
  className = '',
}) => {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg" 
      viewBox="0 0 1024 1024"
      width={width} 
      height={height} 
      style={{ minWidth: width, minHeight: height }}
      className={className}
    >
      <path 
        fill={fill}
        d="m251 248-9 1v-1l-1 2-7 4c-12 6-24 21-27 35l-2 15a406 406 0 0 0 0 45c-2 0-2 1-1 2a206 206 0 0 1 1 40 169 169 0 0 1 0 33v10c1 7 0 10-1 11v1h1v-1l1 4v9l-1 5v13l1 23c0 18-1 22-2 22v1h1v25h1c0 1 0 2-1 1v39l1 10-1 6v24l1 5-1 6h-1l1 2 2 6a111 111 0 0 0 2 9c-1-1-1-1-1 1 0 1 1 2 2 1l1 1c-1 1 0 2 1 2v2c0 2 0 2 1 1s1-1 2 2l3 4v1c-1 0-2 0-1 1l2 1c2-1 7 3 6 5h2l1 1 2 1 3 3 2 2c1-1 3 0 5 1l12 3 30 1 28 1c3 1 7 9 6 11l-1 20c0 13 0 18-1 17v1l1 23c1 27 1 26 2 25s1 0 3 2c2 3 7 6 12 6 4 0 8-2 13-7 3-3 5-5 6-4l2-1h-2l2-4 5-4h2c0-2 1-4 2-3l1-1c-1-1 6-8 7-7l1-1 1-1 1-1c-1-1 17-19 18-18l1-1c-1-1 6-8 7-7l1-1 2-4c3-2 4-3 5-2h2l-1-1c-2 1-2-1 6-8l9-8 1-1 9-11 11-10h164a14342 14342 0 0 0 170-2l16-8 3-1 1-1c-1 0 1-3 4-5l6-7 2-1 1-1 1-5 4-9 2-7V515a2998 2998 0 0 1 1-126l-1-48-1-51-1-3-2-4v-4l1-2h-3l-5-7c-7-9-15-15-28-21l-265-2-263 1zm111 133h1a247 247 0 0 1 48-1l2-1 18 1 17 1 1 1v-1c-2-1 0-1 17-1l7 1h2l4-1h2a500 500 0 0 1 27 0h38a287 287 0 0 1 48 3l1 1c1-1 7 2 10 5v1l-4-1c-1 1-1 1 1 1l2 1 2 2c2 0 2 1 2 3s0 2 1 1 1-1 1 1v2c1 0 2 1 2 3v3l1 5c0 6-2 12-4 13l-1 1-2 4c-2 3-3 4-5 3-2 0-2 0-1 1 2 1 0 2-6 5-5 2-6 2-131 2a7627 7627 0 0 1-134-3c-2 0-2 0-1-1s1-1-1-1c-2 1-8-3-7-5l-1-1c-1 1-3-1-3-3l-2-3c-2-3-2-5-2-13s2-17 4-15l1-1c-1-1 4-7 5-6l1-1c0-1 1-2 3-2l3-2h1l1-1 8-2h7l16 1zm56 114v1l1-1 24-1 25 1h1l1-1 2 1 1 1v-1h14l2 1v-1c-1-1 0-1 4-1l6 1 2 1v-1c-1-1 0-1 5-1l7 1h1c-1-1 0-1 2-1l4 1h2l3 1-1-1 10-1 8 1c-2 1-2 1 1 1 2 0 3 0 2-1l5-1 5 1 2 1v-1c-1-1 1-1 6-1 1l8 1h28l1 1 1-1c-1-1 1-1 6-1s6 0 5 1h1l2-1v1c-1 1 0 1 4 1s4 0 1-1-2-1 4-1l8 1 1 1 1-1c-1-1 1-1 4-1l5 1v1l1-1h34l6-1 7 1 2 1v-1c-1-1 1-1 5-1 5 0 7 0 6 1l1 1c2-1 9 1 9 3l2 1c2 0 6 5 6 6v2l1-1c-1-1-1-1 0 0 3 3 5 10 5 16s-1 11-2 11v1l-1 4h-2c-2 0-2 1-1 1v3l-3 1-1 1c1 2-8 7-11 7l-3 1c1 1 1 1-1 1h-20l-51 1c-44 0-49 0-51-2-1-1-1-1 0 0 1 2 1 2-8 2l-10-1h-1a1240 1240 0 0 1-115 0c1 1-10 1-55 1l-61-2-6-4-1-1h-2l-1-3-1-1c-1 1-4-2-3-4l-1-1c-1 1-4-6-5-13 0-7 1-13 5-19l3-4 2-1c2-3 11-7 12-6l1-1c-1-1 10-1 41-1l43 1z"
      />
    </svg>
  );
};

export const FullscreenIcon: React.FC<IconProps> = ({
  width = 24,
  height = 24,
  fill = 'currentColor',
  className = '',
}) => {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg" 
      viewBox="0 0 24 24"
      width={width} 
      height={height} 
      style={{ minWidth: width, minHeight: height }}
      className={className}
    >
      <path 
        fill={fill}
        d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"
      />
    </svg>
  );
};

export const OpenAIIcon: React.FC<IconProps> = ({
  width = 24,
  height = 24,
  fill = 'currentColor',
  className = '',
}) => {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg" 
      viewBox="0 0 1024 1024" 
      width={width} 
      height={height} 
      style={{ minWidth: width, minHeight: height }}
      className={className}
    >
      <path 
        fill={fill}
        d=" M844.348877,450.768127 C856.439148,475.258301 863.244141,500.664642 864.466309,527.697510 C866.962524,582.910278 848.311035,629.281311 808.003723,667.158875 C784.532166,689.215454 757.299255,704.153381 726.258362,712.329468 C723.307983,713.106506 721.377747,714.417480 720.171387,717.453247 C696.887573,776.044067 652.622009,811.750854 593.063171,826.751892 C527.417725,843.286011 469.291168,826.180115 421.115265,777.882202 C417.571106,774.329163 414.567871,773.200073 409.396027,774.101135 C367.681793,781.368774 328.318359,773.969788 291.359344,753.671204 C244.426743,727.894897 214.259628,688.816772 201.432968,636.952881 C193.341644,604.236023 195.220673,571.659607 207.510330,540.016174 C208.788757,536.724487 208.325165,534.548950 206.078857,531.962219 C183.123901,505.529083 169.712830,474.621796 165.926697,440.061096 C159.790039,384.044373 175.854523,335.238007 215.847412,294.777374 C240.253418,270.085968 269.167847,253.551270 302.945496,245.630280 C307.235077,244.624359 309.150269,242.206390 310.691772,238.351395 C335.667542,175.893295 382.121674,138.712219 447.362457,125.866058 C507.427124,114.039101 560.157898,131.036728 604.345276,172.947632 C613.641541,181.764984 621.655090,184.042175 634.254333,182.167389 C666.185242,177.416031 697.348083,183.306839 726.843506,195.920944 C780.276672,218.772400 815.661255,258.145630 831.571655,314.338898 C837.565430,335.508118 838.548035,357.139282 836.501648,379.043915 C835.209656,392.873260 832.432739,406.308929 828.205139,419.465271 C827.160217,422.717010 827.639832,425.137024 829.550964,427.784821 C834.815308,435.078705 839.944824,442.472595 844.348877,450.768127 M644.469788,308.986420 C691.041687,336.041229 738.290710,361.906250 784.286499,389.428741 C786.161987,387.883423 786.397034,386.455780 786.674561,384.947540 C789.378296,370.251343 789.291016,355.578339 786.737427,340.862579 C780.789734,306.586823 763.487610,279.081055 736.071167,258.216064 C715.860840,242.835205 692.820190,233.713089 667.293579,231.212646 C647.389465,229.262970 627.697998,229.275085 608.790100,236.772522 C592.606812,243.189606 578.433960,253.365540 563.462524,262.019379 C535.212402,278.348602 507.237274,295.152924 479.071411,311.628998 C469.446625,317.259186 459.583588,322.481415 449.850769,327.928223 C447.942352,328.996246 446.245941,330.201782 446.212921,332.838989 C445.973480,351.990021 445.580292,371.139465 445.430603,390.290955 C445.396027,394.716461 447.077484,395.463654 451.226410,393.295044 C456.684845,390.441956 462.067871,387.444824 467.490387,384.522736 C494.473511,369.982208 520.741516,354.212402 546.854614,338.185944 C567.286316,325.646332 588.491821,314.389465 608.338135,300.874786 C615.350342,296.099701 622.757996,296.433838 630.031433,300.560791 C634.665405,303.190033 639.238525,305.926483 644.469788,308.986420 M301.226196,599.341125 C284.018677,589.323608 266.811188,579.306030 248.896683,568.876831 C245.454315,585.513916 244.899231,601.248657 247.745651,616.833130 C254.911789,656.068298 276.131104,685.836121 309.859009,706.930115 C328.735809,718.735901 349.310120,724.936096 371.388885,726.987061 C393.571106,729.047668 414.726471,727.058411 434.496124,715.450378 C483.615479,686.609009 532.453125,657.282043 582.078186,629.308228 C585.364197,627.455811 586.748169,625.199280 586.709534,621.344666 C586.535461,604.016968 586.669800,586.686340 586.603577,569.357117 C586.595093,567.141113 587.648682,564.163330 585.128479,562.976440 C582.818787,561.888672 580.855103,564.195190 578.881042,565.333862 C559.840027,576.317566 540.846863,587.384949 521.764221,598.295654 C489.673340,616.643921 456.983002,633.979736 426.135864,654.428284 C416.477234,660.831055 407.270172,661.338440 397.281281,655.252930 C365.847076,636.102234 333.983612,617.679077 301.226196,599.341125 M380.712036,475.720917 C389.740204,480.669586 398.032166,486.980713 407.374664,491.295319 C409.018616,488.570496 408.626770,486.522156 408.630524,484.558044 C408.662628,467.733429 408.649261,450.908752 408.649200,434.084076 C408.649048,392.297546 408.606384,350.510895 408.683807,308.724518 C408.699554,300.234436 412.517639,293.725647 420.010406,289.515656 C424.946075,286.742401 429.933044,284.056793 434.814606,281.191437 C476.597321,256.666016 518.364624,232.114380 560.117615,207.538315 C561.755493,206.574219 563.806091,205.889740 564.344421,202.899994 C564.042175,202.727280 563.416382,202.443375 562.871765,202.047852 C533.394897,180.640213 501.089233,169.018967 464.191193,174.285873 C420.510986,180.520859 387.598907,203.217377 364.929688,240.801605 C356.424622,254.902542 350.195984,270.323517 349.622284,286.775055 C348.711700,312.886475 348.752991,339.051788 348.539276,365.189728 C348.295715,394.973816 349.589752,424.769409 350.096954,454.562012 C350.152618,457.833832 351.405853,459.669098 354.248932,461.174408 C362.928711,465.770172 371.471191,470.625214 380.712036,475.720917 M377.052429,518.515625 C356.033783,506.622711 335.189362,494.405243 313.917664,482.983673 C304.322388,477.831573 300.001221,470.764709 300.656250,460.100403 C301.626923,444.297455 300.972076,428.478882 300.884216,412.663269 C300.685181,376.838196 300.726868,341.011780 300.635345,305.186005 C300.619934,299.156616 299.110626,298.150940 293.839569,300.486145 C237.163742,325.594818 202.209015,384.507629 218.417053,449.174927 C226.897247,483.009430 244.708664,510.434418 275.756927,528.061462 C283.287567,532.336853 290.749420,536.733215 298.262360,541.040039 C337.854462,563.736023 376.852936,587.454712 416.667389,609.770447 C420.137207,611.715271 422.917755,611.838013 426.343292,609.794800 C441.219696,600.921387 456.231384,592.275208 471.152130,583.475586 C477.547485,579.703857 477.624390,578.179626 471.480591,574.248230 C440.881683,554.668518 409.143738,537.014893 377.052429,518.515625 M614.970703,667.547180 C565.849548,694.883057 517.861206,724.139282 469.339081,752.483582 C469.883118,753.682312 469.979095,754.226013 470.300385,754.537109 C471.135406,755.345520 472.038269,756.093140 472.968445,756.792725 C507.323639,782.632141 545.526978,789.356873 586.251099,776.969482 C626.839966,764.623169 655.879272,738.224670 672.765015,698.994446 C677.783936,687.334045 681.900635,675.203430 682.451721,662.550171 C683.443970,639.767090 683.441650,616.935974 683.617126,594.123169 C683.852966,563.473938 683.859192,532.822998 683.977173,502.172821 C683.988159,499.328369 684.291443,496.576843 680.917908,495.004089 C663.214600,486.750824 646.534729,476.743134 630.537415,465.543976 C626.539307,462.745117 624.423279,464.037354 624.372864,469.027740 C624.218262,484.346588 623.139526,499.634888 623.281250,514.970459 C623.521484,540.954651 623.610840,566.946167 623.265198,592.927917 C623.010254,612.090454 624.649414,631.200073 624.285645,650.344604 C624.155090,657.211548 622.303223,663.541626 614.970703,667.547180 M795.543152,607.051697 C815.710632,574.529907 820.046143,539.366699 810.347961,502.982666 C800.908508,467.569275 779.259583,441.447113 746.644531,423.564423 C702.128601,399.156586 658.962708,372.333862 614.623291,347.572571 C611.163147,345.640228 608.616699,345.607605 605.060913,347.426361 C589.014038,355.634216 575.037354,367.235016 558.881042,375.252502 C554.886780,377.234650 555.381714,379.710785 560.013916,382.360901 C588.194702,398.483490 616.434570,414.503448 644.565002,430.713318 C670.532593,445.676910 696.397949,460.818115 722.285217,475.920746 C729.134033,479.916412 732.496765,485.532867 732.456482,493.915070 C732.206665,545.887146 732.316284,597.861084 732.321533,649.834351 C732.322205,656.760559 733.088989,657.249512 739.503845,654.620239 C763.099854,644.948975 781.066467,628.611572 795.543152,607.051697 M551.298645,421.291473 C541.137695,415.246765 530.934631,409.270905 520.843689,403.111450 C518.140381,401.461365 515.835083,401.115631 512.999573,402.781586 C507.547119,405.985046 501.896820,408.849640 496.399536,411.979370 C481.351135,420.546875 466.338257,429.176819 451.314392,437.787384 C448.322083,439.502319 446.277252,441.427368 446.215424,445.523529 C445.880920,467.680298 447.054718,489.802582 447.363739,511.942169 C447.397827,514.384338 447.934723,516.526489 450.223450,517.931519 C471.085236,530.738464 491.948792,543.542725 512.762146,556.428101 C515.135071,557.897217 516.995056,557.562073 519.146118,556.093506 C523.407104,553.184509 527.746643,550.385315 532.122437,547.650696 C547.664734,537.937622 563.635925,528.969971 579.801819,520.343567 C582.790100,518.748962 585.543579,517.147095 585.654724,513.035706 C586.243713,491.243378 586.920959,469.453033 587.693542,447.666443 C587.820801,444.077118 586.620178,441.817200 583.441284,440.017029 C572.864563,434.027527 562.428711,427.789368 551.298645,421.291473 z"
      />
    </svg>
  );
};

export const QuestionMarkIcon: React.FC<IconProps> = ({
  width = 24,
  height = 24,
  fill = 'currentColor',
  className = '',
}) => {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg" 
      viewBox="0 0 90 90"
      width={width} 
      height={height} 
      style={{ minWidth: width, minHeight: height }}
      className={className}
    >
      <path 
        fill={fill}
        d="M58.75 10.625C63.697 13.764 67.468 18.29 69 24c.521 5.527-.227 10.198-3 15-2.632 2.897-5.647 5.14-8.941 7.234-3.413 2.194-5.354 3.572-6.496 7.578L50 57H36c-.29-5.597-.233-9.203 3-14 3.046-3.009 6.328-5.547 9.875-7.938 2.434-2.016 2.434-2.016 3.125-5.624.27-3.287.27-3.287-1-5.313-3.58-2.014-7.26-2.56-11.25-1.563-2.445 1.81-2.445 1.81-4.75 7.438H21c.511-7.283 1.977-12.057 7.375-17.313 7.95-5.11 21.66-6.069 30.375-2.062ZM48 66c2.563 1.563 2.563 1.563 4 4 .553 3.873.563 6.045-1.438 9.438C46.76 81.755 43.338 81.772 39 81c-2.563-1.563-2.563-1.563-4-4-.553-3.873-.563-6.045 1.438-9.438C40.24 65.245 43.662 65.228 48 66Z"
      />
    </svg>
  );
};
